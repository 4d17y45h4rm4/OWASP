name: Deploy Latest WSTG Content to Web

on:
  push:
    tags:
      - 'v*'

jobs:
  create_pr:
    name: Create Pull Request
    if: github.actor == 'kingthorin' || github.actor == 'ThunderSon' || github.actor == 'rejahrehim' || github.actor == 'victoriadrake'
    runs-on: ubuntu-latest
    steps:
    - name: Setup
      run: |
        sudo apt update
        sudo apt install moreutils
        sudo snap install yq
    - name: Git Clone and Global Config
      run: |
        # Git setup
        export GITHUB_USER=wstgbot
        echo ::set-env name=GITHUB_USER::$GITHUB_USER
        echo ::set-env name=GITHUB_TOKEN::${{ secrets.wstg_deploy_token }}
        git config --global user.email "62450690+wstgbot@users.noreply.github.com"
        git config --global user.name $GITHUB_USER
        # Clone the necessary repos
        git clone https://github.com/OWASP/wstg.git
        git clone -o upstream https://github.com/OWASP/www-project-web-security-testing-guide.git
    - name: Setup Environment Variables
      run : |
        # Setup some env vars etc for future use
        # Extract version from tag ref
        VERS_TAG=${GITHUB_REF/refs\/tags\//}
        echo ::set-env name=VERS_TAG::$VERS_TAG
        VERSION=$(echo $VERS | tr -d .)
        echo ::set-env name=VERSION::$VERSION
        cd wstg
        echo ::set-env name=WSTG_BASE::"$(pwd)"
        echo ::set-env name=SRC_BASE::"OWASP/wstg@"$(git log -1 --format=format:%h)
        echo ::set-env name=BRANCH_STAMP::"$(date +"%Y%m%d%H%M%S")"
        echo ::set-env name=SHORT_DATE::"$(date +"%Y-%m-%d")"
        cd ../www-project-web-security-testing-guide
        echo ::set-env name=WWW_BASE::"$(pwd)"
    - name: Create Feature Branch
      run: |
        cd $WSTG_BASE
        git checkout tags/$VERS_TAG -b ver-branch
        cd $WWW_BASE
        git remote add origin https://github.com/$GITHUB_USER/www-project-web-security-testing-guide.git
        # Checkout what will be the new feature branch
        git checkout -b $BRANCH_STAMP
        # Remove old 'stable' content
        rm -rf stable
        mkdir stable
        # Copy new 'stable' content
        cp -R $WSTG_BASE/document/* ./stable
        # Create version directory
        mkdir $VERSION
        # Copy new version content
        cp -R $WSTG_BASE/document/* ./$VERSION
    - name: Modify Files for Web Deployment (Stable)
      run: |
        cd $WWW_BASE/stable
        # Append front mater
        for FILE in `find . -type f -name "*.md"`; do cat $WSTG_BASE/www/stable/prepend.txt $FILE | sponge $FILE; done
        # Duplicate README.md as index.md in case people forcefully browse to directory bases
        find . -type f -name "README.md" -execdir cp -v {} ./index.md \;
        # Copy info.md to all directories (excluding 'images' directories)
        find . -type d -not -name "images" -execdir cp -v $WSTG_BASE/www/stable/info.md {} \;
    - name: Setup Navigation (Stable)
      run: |
        # Copy the current ToC for manipulation
        cp $WSTG_BASE/document/README.md $WSTG_BASE/www/stable/.
        cd $WSTG_BASE/www/stable/
        # Create new navigation details from ToC
        # Handle numbered entries
        sed -i -E 's/^#{2,5}\s([0-9.]*\s)\[(.*?)\]\((.*?)\)/- title: '\''\1\2'\''\n  url: \3/g' README.md
        # Handle un-numbered entries
        sed -i -E 's/^#{2,5}\s\[(.*?)\]\((.*?)\)/- title: '\''\1'\''\n  url: \2/g' README.md
        # Remove the title from the README (first line)
        sed -i '1d' README.md
        # Find the anchor links (URL fragments) and lowercase them
        sed -i -E 's/\.md#(.*)$/\.md#\L\1/g' README.md
        # Switch .md references to .html
        sed -i 's/.md/.html/g' README.md
        # Add the leadin and add the generated yaml
        cat prepend.nav > stable.yaml && cat README.md >> stable.yaml
        # Copy the navigation yaml to _data
        cp stable.yaml $WWW_BASE/_data/.
    - name: Modify Files for Web Deployment (Versioned)
      run: |
        cd $WWW_BASE/$VERSION
        # Append front mater
        for FILE in `find . -type f -name "*.md"`; do cat $WSTG_BASE/www/$VERSION/prepend.txt $FILE | sponge $FILE; done
        # Duplicate README.md as index.md in case people forcefully browse to directory bases
        find . -type f -name "README.md" -execdir cp -v {} ./index.md \;
        # Copy info.md to all directories (excluding 'images' directories)
        find . -type d -not -name "images" -execdir cp -v $WSTG_BASE/www/$VERSION/info.md {} \;
        # Set stable_version in site config
        yq w $WWW_BASE/_config.yml stable_version $VERSION |sponge $WWW_BASE/_config.yml
    - name: Setup Navigation (Versioned)
      run: |
        # Copy the current ToC for manipulation
        cp $WSTG_BASE/document/README.md $WSTG_BASE/www/$VERSION/.
        cd $WSTG_BASE/www/$VERSION/
        # Create new navigation details from ToC
        # Handle numbered entries
        sed -i -E 's/^#{2,5}\s([0-9.]*\s)\[(.*?)\]\((.*?)\)/- title: '\''\1\2'\''\n  url: \3/g' README.md
        # Handle un-numbered entries
        sed -i -E 's/^#{2,5}\s\[(.*?)\]\((.*?)\)/- title: '\''\1'\''\n  url: \2/g' README.md
        # Remove the title from the README (first line)
        sed -i '1d' README.md
        # Find the anchor links (URL fragments) and lowercase them
        sed -i -E 's/\.md#(.*)$/\.md#\L\1/g' README.md
        # Switch .md references to .html
        sed -i 's/.md/.html/g' README.md
        # Add the leadin and add the generated yaml
        cat prepend.nav > $VERSION.yaml && cat README.md >> $VERSION.yaml
        # Copy the navigation yaml to _data
        cp $VERSION.yaml $WWW_BASE/_data/.
    - name: Push Feature Branch and Raise PR
      run: |
        cd $WWW_BASE
        git remote set-url origin https://$GITHUB_USER:${{ secrets.wstg_deploy_token }}@github.com/$GITHUB_USER/www-project-web-security-testing-guide.git
        git add .
        git commit -m "Publish Stable and $VERS_TAG - $SHORT_DATE" -m "Updates based on $SRC_BASE $VERS_TAG"
        git push --set-upstream origin $BRANCH_STAMP
        hub pull-request --no-edit
